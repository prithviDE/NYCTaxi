{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "projectsynapseworkspace"
		},
		"linkedservicetosqlserverdb_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkedservicetosqlserverdb'"
		},
		"linkservicefhvdata_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkservicefhvdata'"
		},
		"linkservicetosqlservervm_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkservicetosqlservervm'"
		},
		"linkservicetosqlservervm_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'linkservicetosqlservervm'"
		},
		"projectdatalakestoragelinkedservice_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'projectdatalakestoragelinkedservice'"
		},
		"projectsynapseworkspace-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'projectsynapseworkspace-WorkspaceDefaultSqlServer'"
		},
		"linkservicetosqlservervm_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "vm1\\dssadmin"
		},
		"projectdatalakestoragelinkedservice_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dssadmin.dfs.core.windows.net/"
		},
		"projectsynapseworkspace-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dssadmin.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/SQLPool1')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Pipeline 1')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "LoadGreenTaxiData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dst_tbl_onprem_greentaxi",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "greentaxidata_lake",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dst_tbl_onprem_greentaxi')]",
				"[concat(variables('workspaceId'), '/datasets/greentaxidata_lake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/copy_fhv_data')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "copy_fhv_data_json",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "copy_fhv_rawdata",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "load_fhv_rawdata",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "copy_fhv_data_csv",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "copy_fhv_rawdata_updated_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "load_fhv_rawdata_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T20:46:47Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/copy_fhv_rawdata')]",
				"[concat(variables('workspaceId'), '/datasets/load_fhv_rawdata')]",
				"[concat(variables('workspaceId'), '/datasets/copy_fhv_rawdata_updated_csv')]",
				"[concat(variables('workspaceId'), '/datasets/load_fhv_rawdata_csv')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/copy_greentaxi_data')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "LoadGreenTaxiData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dst_tbl_onprem_greentaxi",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "greentaxidata_lake",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T20:46:49Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dst_tbl_onprem_greentaxi')]",
				"[concat(variables('workspaceId'), '/datasets/greentaxidata_lake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/copy_taxizone_data')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "copy_taxizone_data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "copy_taxizone_rawdata",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "load_taxizone_rawdata",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/copy_taxizone_rawdata')]",
				"[concat(variables('workspaceId'), '/datasets/load_taxizone_rawdata')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/copy_yellowtaxi_data')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "copy_yellowdata_lake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "copy_yellowtaxidata_raw",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "load_yellowtaxidata_raw",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/copy_yellowtaxidata_raw')]",
				"[concat(variables('workspaceId'), '/datasets/load_yellowtaxidata_raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/copied_fhv_rawdata')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "projectdatalakestoragelinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "rawfilesdir",
						"fileSystem": "projectdatalakestoragefilesystem"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/projectdatalakestoragelinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/copy_fhv_rawdata')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkservicefhvdata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "taxibusinessdata"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/linkservicefhvdata')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/copy_fhv_rawdata_csv')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkservicefhvdata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "fhvtaxis_201911.csv",
						"container": "taxibusinessdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/linkservicefhvdata')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/copy_fhv_rawdata_updated_csv')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkservicefhvdata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Fhavtaxis11.csv",
						"container": "taxibusinessdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/linkservicefhvdata')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/copy_taxizone_rawdata')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkservicefhvdata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "TaxiZones",
						"container": "taxibusinessdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/linkservicefhvdata')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/copy_yellowtaxidata_raw')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedservicetosqlserverdb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "YellowTaxiData"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/linkedservicetosqlserverdb')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dst_fhv_rawdata')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkservicefhvdata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/linkservicefhvdata')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dst_tbl_onprem_greentaxi')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkservicetosqlservervm",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "VendorID",
						"type": "varchar"
					},
					{
						"name": "lpep_pickup_datetime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "lpep_dropoff_datetime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "passenger_count",
						"type": "int",
						"precision": 10
					},
					{
						"name": "trip_distance",
						"type": "float",
						"precision": 15
					},
					{
						"name": "RatecodeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "store_and_fwd_flag",
						"type": "varchar"
					},
					{
						"name": "PULocationID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DOLocationID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "payment_type",
						"type": "int",
						"precision": 10
					},
					{
						"name": "fare_amount",
						"type": "float",
						"precision": 15
					},
					{
						"name": "extra",
						"type": "float",
						"precision": 15
					},
					{
						"name": "mta_tax",
						"type": "float",
						"precision": 15
					},
					{
						"name": "tip_amount",
						"type": "float",
						"precision": 15
					},
					{
						"name": "tolls_amount",
						"type": "float",
						"precision": 15
					},
					{
						"name": "improvement_surcharge",
						"type": "float",
						"precision": 15
					},
					{
						"name": "total_amount",
						"type": "float",
						"precision": 15
					},
					{
						"name": "congestion_surcharge",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "GreenTaxiData"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/linkservicetosqlservervm')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dst_yellowtaxi_data')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedservicetosqlserverdb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "YellowTaxiData"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/linkedservicetosqlserverdb')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/greentaxidata_lake')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "projectdatalakestoragelinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "rawfilesdir",
						"fileSystem": "projectdatalakestoragefilesystem"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/projectdatalakestoragelinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/load_fhv_rawdata')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "projectdatalakestoragelinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "rawfilesdir",
						"fileSystem": "projectdatalakestoragefilesystem"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/projectdatalakestoragelinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/load_fhv_rawdata_csv')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "projectdatalakestoragelinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "rawfilesdir",
						"fileSystem": "projectdatalakestoragefilesystem"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/projectdatalakestoragelinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/load_taxizone_rawdata')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "projectdatalakestoragelinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "rawfilesdir/Taxizones",
						"fileSystem": "projectdatalakestoragefilesystem"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/projectdatalakestoragelinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/load_yellowtaxidata_raw')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "projectdatalakestoragelinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "rawfilesdir",
						"fileSystem": "projectdatalakestoragefilesystem"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/projectdatalakestoragelinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/yellowtaxi_data_raw')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedservicetosqlserverdb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "YellowTaxiData"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/linkedservicetosqlserverdb')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/linkedservicetosqlserverdb')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('linkedservicetosqlserverdb_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/linkservicefhvdata')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('linkservicefhvdata_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/linkservicetosqlservervm')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('linkservicetosqlservervm_connectionString')]",
					"userName": "[parameters('linkservicetosqlservervm_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('linkservicetosqlservervm_password')]"
					}
				},
				"connectVia": {
					"referenceName": "projectintegrationselfhosted",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/projectintegrationselfhosted')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/projectdatalakestoragelinkedservice')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('projectdatalakestoragelinkedservice_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('projectdatalakestoragelinkedservice_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/projectsynapseworkspace-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('projectsynapseworkspace-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/projectsynapseworkspace-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('projectsynapseworkspace-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/projectintegrationselfhosted')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/01-Create DW Tables')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "Create Schema Dim\n\nCreate Schema Fact \n\nCREATE TABLE Dim.TaxiZones\n\t(\n\t [LocationID] bigint,\n\t [Borough] nvarchar(400),\n\t [Zone] nvarchar(400),\n\t [service_zone] nvarchar(400)\n\t)\n\tWITH\n\t(\n\tDISTRIBUTION = ROUND_ROBIN,\n\t CLUSTERED COLUMNSTORE INDEX\n\t)\n\nGO\n\nCREATE TABLE [Dim].[PaymentType] \n\n( \n\nPaymentID INT NOT NULL,\n\nPaymentType NVARCHAR(20)\n) \n\nWITH \n( \n    DISTRIBUTION = Replicate,\n    CLUSTERED COLUMNSTORE INDEX\n)\n\n\nCreate Table Dim.FHvBases\n(\n    BaseLicenseId Varchar(50),\n    BaseType Varchar(50),\n    AddressBuilding Varchar(100),\n    AddressStreet Varchar(100),\n    AddressCity Varchar(100),\n    AddressState Varchar(100), \n    AddressPostalCode Varchar(10)\n)\n\n\n\n---Alter table with BaseLicenseId\nCREATE TABLE [Fact].[TripDetails]\n(\n\t[VendorId] [int] NULL,\n\t[TransactionKey] [varchar](50) NULL,\n\t[PickupTime] [datetime2](7) NULL,\n\t[DropTime] [datetime2](7) NULL,\n\t[PassangerCount] [int] NULL,\n\t[TripDistance] [float] NULL,\n\t[RateCodeId] [int] NULL,\n\t[PickupLocationId] [int] NULL,\n\t[DropLocationId] [int] NULL,\n\t[PaymentTypeId] [int] NULL,\n\t[TotalAmount] [float] NULL,\n\t[TipAmount] [float] NULL,\n\t[TripYear] [varchar](4) NULL,\n\t[TripMonth] [varchar](2) NULL,\n\t[TripDay] [varchar](2) NULL,\n\t[Fhv_flag] [int] NULL,\n\t[FhvBusinessID] [varchar](10) NULL,\n\t[Fhv_BaseLicenceId] [Varchar](50) null\n)\nWITH\n(\n\tDISTRIBUTION = ROUND_ROBIN,\n\tCLUSTERED COLUMNSTORE INDEX\n)\n\nCREATE TABLE RateCodes\n(\n\tRateCodeId INT,\n\tRateCode VARCHAR(100),\n\tIsApproved BIT\n)\n\n\nCREATE TABLE [dbo].[Vendor](\n\t[VendorID] [int] NULL,\n\t[Vendor_name] [nvarchar](50) NULL\n)\n\nCREATE TABLE Dim.Business\n(\n\tBusinessId nvarchar(10) Not Null,\n\tBusiness_Type nvarchar(20)\n\n)\nWITH(DISTRIBUTION = REPLICATE,\n\tHEAP)\n\n\nINSERT INTO RateCodes (RateCodeId, RateCode, IsApproved)\nVALUES\n(1, 'Standard Rate', 1),\n(2, 'JFK', 1),\n(3, 'Newark', 1),\n(4, 'Westchester', 0),\n(5, 'Negotiated fare', 1),\n(6, 'GroupRide', 1)\n\n\n\nINSERT INTO Vendor VALUES(1,'Creative Mobile Technologies,LLC'),\n(2,'VeriFone Inc')\n\n\nINSERT INTO BUSINESS VALUES('HV0002','Juno'),\n('HV0003','Uber'),\n('HV0004', 'Via'),\n('HV0005', 'Lyft')\n\n\n\n\n\n\n/****** Object:  StoredProcedure [dbo].[bulk_load_TaxiZones]    Script Date: 24-08-2022 15:27:27 ******/\nSET ANSI_NULLS ON\nGO\n\nSET QUOTED_IDENTIFIER ON\nGO\n\nALTER PROC [dbo].[bulk_load_TaxiZones] AS\nBEGIN\n\nIF NOT EXISTS (SELECT * FROM sys.objects O JOIN sys.schemas S ON O.schema_id = S.schema_id WHERE O.NAME = 'TaxiZones' AND O.TYPE = 'U' AND S.NAME = 'dbo')\nCREATE TABLE Dim.TaxiZones\n\t(\n\t [LocationID] bigint,\n\t [Borough] nvarchar(400),\n\t [Zone] nvarchar(400),\n\t [service_zone] nvarchar(400)\n\t)\nWITH\n\t(\n\tDISTRIBUTION = ROUND_ROBIN,\n\t CLUSTERED COLUMNSTORE INDEX\n\t -- HEAP\n\t)\n\nELSE\n\tTRUNCATE TABLE Dim.TaxiZones\n\n--Uncomment the 4 lines below to create a stored procedure for data pipeline orchestration​\n--CREATE PROC bulk_load_TaxiZones\n--AS\n--BEGIN\nCOPY INTO DIM.TaxiZones\n(LocationID 1, Borough 2, Zone 3, service_zone 4)\nFROM 'https://dssavdprojdatalake.dfs.core.windows.net/taxidataraw/TaxiZones'\nWITH\n(\n\tFILE_TYPE = 'CSV'\n\t,MAXERRORS = 10\n\t,FIRSTROW = 2\n\t,ERRORFILE = 'https://dssavdprojdatalake.dfs.core.windows.net/taxidataraw/Errors/'\n)\nEND\nGO\n\n\n\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "SQLPool1",
						"poolName": "SQLPool1"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQLPool1')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus"
		}
	]
}