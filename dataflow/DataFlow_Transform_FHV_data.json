{
	"name": "DataFlow_Transform_FHV_data",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "fhv_csvdataset_source",
						"type": "DatasetReference"
					},
					"name": "FHVCSVTOPARQUET"
				},
				{
					"dataset": {
						"referenceName": "fhv_json_source_lnksrvc",
						"type": "DatasetReference"
					},
					"name": "FHVJSONTOPARQUET"
				},
				{
					"dataset": {
						"referenceName": "PaymentTypesJson",
						"type": "DatasetReference"
					},
					"name": "PaymentType"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "deriveTransactionKey"
				},
				{
					"name": "GenerateTransactionKey"
				},
				{
					"name": "deriveTripYearMonthDay"
				}
			],
			"scriptLines": [
				"source(output(",
				"          hvfhs_license_num as string,",
				"          dispatching_base_num as string,",
				"          pickup_datetime as timestamp,",
				"          dropoff_datetime as timestamp,",
				"          PULocationID as short,",
				"          DOLocationID as short,",
				"          SR_Flag as boolean,",
				"          TotalAmount as double,",
				"          TipAmount as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 1000,",
				"     ignoreNoFilesFound: false) ~> FHVCSVTOPARQUET",
				"source(output(",
				"          {License Number} as string,",
				"          {Entity Name} as string,",
				"          {Telephone Number} as integer,",
				"          {SHL Endorsed} as string,",
				"          Address as (Building as string, Street as string, City as string, State as string, Postcode as integer),",
				"          GeoLocation as (Latitude as double, Longitude as double, Location as string),",
				"          {Type of Base} as string,",
				"          Date as string,",
				"          Time as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> FHVJSONTOPARQUET",
				"source(output(",
				"          PaymentTypeID as integer,",
				"          PaymentType as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> PaymentType",
				"GenerateTransactionKey derive(TransactionKey = concat(toString(TransactionKey), 'fhv')) ~> deriveTransactionKey",
				"FHVCSVTOPARQUET keyGenerate(output(TransactionKey as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> GenerateTransactionKey",
				"deriveTransactionKey derive(tripYear = year(toDate(pickup_datetime)),",
				"          column1 = ERROR_FUNCTION('')) ~> deriveTripYearMonthDay"
			]
		}
	}
}