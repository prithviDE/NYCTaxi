{
	"name": "DataFlow_Transform_FHV_data",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "sec_ls_fhv_load_raw",
						"type": "DatasetReference"
					},
					"name": "FHVTaxiFactDataCSV"
				},
				{
					"dataset": {
						"referenceName": "PaymentTypesJson",
						"type": "DatasetReference"
					},
					"name": "FHVPaymentTypeSourceJSON"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "transformed_fhv_csv_to_sink",
						"type": "DatasetReference"
					},
					"name": "SinkFHVToDataLake"
				},
				{
					"dataset": {
						"referenceName": "transform_fhv_csv_to_dw_sink",
						"type": "DatasetReference"
					},
					"name": "SinkFHVToSQLWarehouse"
				}
			],
			"transformations": [
				{
					"name": "GenerateTransactionKey"
				},
				{
					"name": "AddTransactionSuffixFHR"
				},
				{
					"name": "AddFHVTripYearMonthDay"
				}
			],
			"scriptLines": [
				"source(output(",
				"          hvfhs_license_num as string,",
				"          dispatching_base_num as string,",
				"          pickup_datetime as timestamp,",
				"          dropoff_datetime as timestamp,",
				"          PULocationID as short,",
				"          DOLocationID as short,",
				"          SR_Flag as boolean,",
				"          TotalAmount as double,",
				"          TipAmount as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 1000,",
				"     ignoreNoFilesFound: false) ~> FHVTaxiFactDataCSV",
				"source(output(",
				"          PaymentTypeID as integer,",
				"          PaymentType as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> FHVPaymentTypeSourceJSON",
				"FHVTaxiFactDataCSV keyGenerate(output(TransactionKey as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> GenerateTransactionKey",
				"GenerateTransactionKey derive(TransactionKey = concat(toString(TransactionKey),'fhv')) ~> AddTransactionSuffixFHR",
				"AddTransactionSuffixFHR derive(tripYear = year(toDate(pickup_datetime)),",
				"          tripMonth = month(toDate(pickup_datetime)),",
				"          tripDay = dayOfMonth(toDate(pickup_datetime))) ~> AddFHVTripYearMonthDay",
				"AddFHVTripYearMonthDay sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SinkFHVToDataLake",
				"AddFHVTripYearMonthDay sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          VendorId as integer,",
				"          TransactionKey as string,",
				"          PickupTime as timestamp,",
				"          DropTime as timestamp,",
				"          PassangerCount as integer,",
				"          TripDistance as double,",
				"          RateCodeId as integer,",
				"          PickupLocationId as integer,",
				"          DropLocationId as integer,",
				"          PaymentTypeId as integer,",
				"          TotalAmount as double,",
				"          TipAmount as double,",
				"          TripYear as string,",
				"          TripMonth as string,",
				"          TripDay as string,",
				"          Fhv_flag as integer,",
				"          FhvBusinessID as string,",
				"          Fhv_BaseLicenceId as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          TransactionKey,",
				"          PickupTime = pickup_datetime,",
				"          DropTime = dropoff_datetime,",
				"          PickupLocationId = PULocationID,",
				"          DropLocationId = DOLocationID,",
				"          TotalAmount,",
				"          TipAmount,",
				"          TripYear = tripYear,",
				"          TripMonth = tripMonth,",
				"          TripDay = tripDay,",
				"          Fhv_BaseLicenceId = hvfhs_license_num",
				"     )) ~> SinkFHVToSQLWarehouse"
			]
		}
	}
}