{
	"name": "Dataflow_YellowTaxidata_Cleanse",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "clean_yellowtaxi_data",
						"type": "DatasetReference"
					},
					"name": "cleanyellowtaxidata"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "cleanedyellowdatalinkservc",
						"type": "LinkedServiceReference"
					},
					"name": "CleanedYellowTaxidata"
				}
			],
			"transformations": [
				{
					"name": "passengercountyellowtaxidata"
				},
				{
					"name": "filterVendorYellow"
				},
				{
					"name": "castyellowpassengercountint"
				},
				{
					"name": "filterAmountTipYellow"
				},
				{
					"name": "filterPickupDropYellow"
				}
			],
			"scriptLines": [
				"source(output(",
				"          VendorID as string,",
				"          tpep_pickup_datetime as string,",
				"          tpep_dropoff_datetime as string,",
				"          passenger_count as string,",
				"          trip_distance as string,",
				"          RatecodeID as string,",
				"          store_and_fwd_flag as string,",
				"          PULocationID as string,",
				"          DOLocationID as string,",
				"          payment_type as string,",
				"          fare_amount as string,",
				"          extra as string,",
				"          mta_tax as string,",
				"          tip_amount as string,",
				"          tolls_amount as string,",
				"          improvement_surcharge as string,",
				"          total_amount as string,",
				"          congestion_surcharge as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 1000,",
				"     ignoreNoFilesFound: false) ~> cleanyellowtaxidata",
				"castyellowpassengercountint filter(and(passenger_count>=1,passenger_count<=5)) ~> passengercountyellowtaxidata",
				"passengercountyellowtaxidata filter(!(isNull(VendorID)||isNull(payment_type)||isNull(RatecodeID))) ~> filterVendorYellow",
				"cleanyellowtaxidata cast(output(",
				"          tpep_pickup_datetime as date,",
				"          tpep_dropoff_datetime as date,",
				"          passenger_count as integer,",
				"          tip_amount as float,",
				"          total_amount as float",
				"     ),",
				"     errors: true) ~> castyellowpassengercountint",
				"filterVendorYellow filter(and(total_amount>0,tip_amount>=0)) ~> filterAmountTipYellow",
				"filterAmountTipYellow filter(and(tpep_pickup_datetime>=toDate('2019-11-01'),tpep_pickup_datetime<=toDate('2019-11-30'))\r",
				"&& \r",
				"and(tpep_dropoff_datetime>=toDate('2019-11-01'),tpep_dropoff_datetime<=toDate('2019-11-30'))) ~> filterPickupDropYellow",
				"filterPickupDropYellow sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     fileSystem: 'projectdatalakestoragefilesystem',",
				"     folderPath: 'Cleaned_Data',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> CleanedYellowTaxidata"
			]
		}
	}
}